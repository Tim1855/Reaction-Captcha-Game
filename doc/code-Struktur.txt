Menu:
Verantwortlich für die Interaktion mit dem Benutzer und die Menüführung.
Verbessern: Stellen Sie sicher, dass es robustes Fehlerhandling für Benutzereingaben gibt.

Image:
Verantwortlich für das Laden und Verarbeiten der Bilder aus dem KITTI-Datensatz.
Verbessern: Nutzen Sie const-Correctness und die Standard Template Library (STL) für effizientes Speicher- und Datenmanagement.
Implementiere die Image.hpp und Image.cpp, um das Laden und Verarbeiten der Bilder aus dem KITTI-Datensatz zu ermöglichen.
Stelle sicher, dass die Bilder korrekt angezeigt werden können und die Bounding Boxes aus dem Datensatz verarbeitet und angezeigt werden.



GameHandler:
Verantwortlich für die Spielsteuerung, den Ablauf und das Verwalten des aktuellen Spielzustands.
Verbessern: Verwenden Sie Designmuster wie State oder Strategy, um den Spielmoduswechsel zu erleichtern.
Implementiere die GameHandler.hpp und GameHandler.cpp, um die Hauptlogik des Spiels zu steuern.
Diese Komponente sollte die Bilder laden, die Spielmodi verwalten und die Spielzustände steuern.

MouseHandler:
Verantwortlich für die Verarbeitung der Mausereignisse und Klicks.
Verbessern: Integrieren Sie Event-Handling-Mechanismen und stellen Sie sicher, dass alle möglichen Mausereignisse berücksichtigt werden.
Implementiere die MouseHandler.hpp und MouseHandler.cpp, um die Mausereignisse zu verarbeiten.
Diese Komponente sollte Mausbewegungen und -klicks registrieren und die entsprechenden Aktionen im Spiel auslösen.



TimeHandler:
Verantwortlich für die Zeitmessung der Reaktionen.
Verbessern: Verwenden Sie präzise Zeitmessungsfunktionen und überprüfen Sie die Leistung, um sicherzustellen, dass die Zeitmessung genau ist.
Implementiere die TimeHandler.hpp und TimeHandler.cpp, um die Reaktionszeit des Spielers zu messen.
Stelle sicher, dass die Zeitmessung präzise ist und korrekt in den verschiedenen Spielmodi verwendet wird.

GameMode (Base Class):
Eine Basisklasse für verschiedene Spielmodi.
Verbessern: Stellen Sie sicher, dass die Klassenvererbung und Polymorphie effektiv genutzt werden, um unterschiedliche Spielmodi zu implementieren.
Implementiere die GameMode.hpp als Basisklasse für die verschiedenen Spielmodi.
Implementiere GameMode1.hpp und GameMode1.cpp für den ersten Spielmodus.
Implementiere GameMode2.hpp und GameMode2.cpp für den zweiten Spielmodus.
Diese Klassen sollten die spezifischen Regeln und Verhaltensweisen der jeweiligen Spielmodi enthalten.

GameMode1 und GameMode2:
Spezifische Implementierungen der Spielmodi, die von GameMode erben.
Verbessern: Nutzen Sie Override-Mechanismen und stellen Sie sicher, dass jeder Modus seine spezifische Logik korrekt implementiert.

Gui:
Verantwortlich für die grafische Benutzeroberfläche.
Verbessern: Integrieren Sie robuste Bibliotheken zur GUI-Erstellung und stellen Sie sicher, dass die Benutzeroberfläche intuitiv und reaktionsschnell ist.
Implementiere die Gui.hpp und Gui.cpp, um die grafische Benutzeroberfläche zu erstellen und zu verwalten.
Diese Komponente sollte für die Darstellung der Spielinhalte und die Interaktion mit dem Spieler verantwortlich sein.